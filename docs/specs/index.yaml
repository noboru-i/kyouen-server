openapi: 3.0.0
info:
  title: Kyouen API
  description: Kyouen server's API.
  version: 0.0.1
servers:
  - url: http://localhost:8080/v2
    description: Development server
  - url: https://kyouen.app/v2
    description: Production server
paths:
  /users/login:
    post:
      summary: Login with twitter account.
      tags:
        - user
      requestBody:
        description: Account data for login.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginParam'
      responses:
        '200':
          description: successful login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResult'

  /stages:
    get:
      summary: Returns kyouen stages.
      tags:
        - stage
      required: [start_stage_no, limit]
      parameters:
        - name: start_stage_no
          in: query
          description: Returns results with an stage number greater than or equals the specified number.
          schema:
            type: int64
            example: 120
        - name: limit
          in: query
          description: Specifies the number of stage to retrieve, up to a maximum of 100 per request.
          schema:
            type: int64
            example: 120
      responses:
        '200':
          description: successful get stages.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stages'
        '404':
          description: cannot get stages.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create new stage.
      tags:
        - stage
      requestBody:
        description: Clear data to save.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewStage'
      responses:
        '200':
          description: successful create stages.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stage'
        '409':
          description: sent stage is already exists.
  /stages/{stage_no}/clear:
    put:
      summary: Save clear data.
      tags:
        - stage
      security:
        - bearerAuth: []
      required: [stage_no]
      parameters:
        - name: stage_no
          in: path
          description: Stage number of cleared.
          schema:
            type: int64
            example: 120
      requestBody:
        description: Clear data to save.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClearStage'
      responses:
        '201':
          description: successful saved cleared data.
  /stages/sync:
    post:
      summary: Sync cleared stage data.
      tags:
        - stage
      requestBody:
        description: Clear data to save.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncRequest'
      responses:
        '200':
          description: successful syned cleared data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncResponse'

  /statics:
    get:
      summary: Returns statics of kyouen stages.
      tags:
        - statics
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Statics'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginParam:
      required:
        - token
        - token_secret
      properties:
        token:
          type: string
          example: AAA
        token_secret:
          type: string
          example: BBB
    LoginResult:
      required:
        - screen_name
        - token
      properties:
        screen_name:
          type: string
          example: Alice
        token:
          type: string
          example: XXXXXX

    Stages:
      type: array
      items:
        $ref: '#/components/schemas/Stage'
    Stage:
      required:
        - stage_no
        - size
        - stage
        - creator
        - regist_date
      properties:
        stage_no:
          type: integer
          format: int64
          example: 12
        size:
          type: integer
          format: int64
          example: 6
        stage:
          type: string
          example: '000000010000001100001100000000001000'
        creator:
          type: string
          example: 'noboru'
        regist_date:
          type: string
          format: date-time
          description: 'date in UTC'
    NewStage:
      required:
        - size
        - stage
        - creator
      properties:
        size:
          type: integer
          format: int64
          example: 6
        stage:
          type: string
          example: '000000010000002200002200000000001000'
        creator:
          type: string
          example: 'noboru'
    ClearStage:
      required:
        - stage
      properties:
        stage:
          type: string
          example: '000000010000002200002200000000001000'

    SyncRequest:
      type: array
      items:
        $ref: '#/components/schemas/ClearedStage'
    SyncResponse:
      type: array
      items:
        $ref: '#/components/schemas/ClearedStage'
    ClearedStage:
      required:
        - stage_no
        - clear_date
      properties:
        stage_no:
          type: integer
          format: int64
          example: 12
        clear_date:
          type: string
          format: date-time
          description: 'date in UTC'

    Statics:
      required:
        - count
        - last_updated_at
      properties:
        count:
          type: integer
          format: int64
          example: 1234
        last_updated_at:
          type: string
          format: date-time
          description: 'date in UTC'

    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int64
          example: 123
        message:
          type: string
